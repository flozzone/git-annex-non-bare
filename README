Setting up a server with git-annex non-bare repos to publish the annexed files

The files once copied will always remain on the server as git-start.sh blocks
git annex to delete data from annexed files

- no need to duplicate files
- symlinks of annexed files stay valid
- no copied data gets deleted from the server

---------------------------------------------------------

TODO

 - special: Add check for broken symlinks in the repo:
     client hook: Needs to be installed by the client
     server hook: Possibility of corrupted data while testing (possible solution
     check out into another directory and check the files and links there.)
 - special: pre-update hook to check commit message for "automatic annex commit" and block pushing
 - special: client post-commit hook to run "git annex copy --to origin" right after "git annex sync"
 - create scripts for:
     - adding/removing a user
     - creating a repository
 - post-receive: recognize when a file gets annexed and inform the user to not
   forget to run "git annex copy --to origin". Othewise the published data gets corrupt
 - git-start.sh: make it possible to have the repositories located in a subdirectory
   instead of directly in the home directory of the git user.
 - create gitolite like administration

---------------------------------------------------------

Drawbacks

 - published data is corrupt in the time between the client issues the commands
   "git annex sync" and "git annex copy --to origin". Because the symlinks of annexed
   files will be broken.
 - managing users can only be done by manually editing the file
 - cannot be driven with a default gitolite installation as it has only bare repos and
   if you would do:
      - git config core.bare false
      - change GIT_WORKDIR to another directory
   it would result in broken annexed file links. (needs to be further tested)

Follow the instructions in INSTALLATION, MAINTENANCE, USAGE to continue.
