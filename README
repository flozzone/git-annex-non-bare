#
# Setting up a server with git-annex non-bare repos to publish the annexed files
#
# The files once pushed will always remain on the server as git-start.sh blocks
# git annex to delete data from annexed files
#


# setup
sudo apt-get install git-core
sudo apt-get install git-annex

- Add a user to your system
sudo adduser git

- Now you’ll need to add your public key to the Git user’s authorized_keys:
sudo mkdir /home/git/.ssh
sudo touch /home/git/.ssh/authorized_keys
sudo chown -R git:git /home/git/.ssh
sudo chmod 700 /home/git/.ssh
sudo chmod 600 /home/git/.ssh/*

- Copy git-start.sh script over
sudo cp /tmp/git-annex-non-bare/git-start.sh /home/git/
sudo chown git:git /home/git/.ssh/git-start.sh

# add a user into authorized_keys
sudo vim /home/git/.ssh/authorized_keys

a line for every user
-----------
command="~/git-start.sh",no-port-forwarding,no-X11-forwarding,no-agent-forwarding,no-pty [HERE COMES THE PUBLIC KEY OF THE USER TO ADD]
-----------

# add a repository
login git
cd
mkdir my-repo.git
cd my-repo.git
git init
git annex init "server"

- Copy the post-receive hook in the right place
cp /tmp/post-receive .git/hooks 

# checking out the repository from a client
git clone git@localhost:my-repo.git
cd my-repo
git annex init "my-username"
cp /media/sound/sound.mp3 .
git annex add sound.mp3
echo test > test
git add test
git commit -m test
git annex sync
git annex copy --to origin
git annex drop .

